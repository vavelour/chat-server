// Code generated by MockGen. DO NOT EDIT.
// Source: private_handler.go

// Package mock_handler is a generated GoMock package.
package mock_handler

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	entities "github.com/vavelour/chat/internal/domain/entities"
)

// MockPrivateService is a mock of PrivateService interface.
type MockPrivateService struct {
	ctrl     *gomock.Controller
	recorder *MockPrivateServiceMockRecorder
}

// MockPrivateServiceMockRecorder is the mock recorder for MockPrivateService.
type MockPrivateServiceMockRecorder struct {
	mock *MockPrivateService
}

// NewMockPrivateService creates a new mock instance.
func NewMockPrivateService(ctrl *gomock.Controller) *MockPrivateService {
	mock := &MockPrivateService{ctrl: ctrl}
	mock.recorder = &MockPrivateServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPrivateService) EXPECT() *MockPrivateServiceMockRecorder {
	return m.recorder
}

// GetPrivateMessages mocks base method.
func (m *MockPrivateService) GetPrivateMessages(sender, recipient string, limit, offset int) ([]entities.Message, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPrivateMessages", sender, recipient, limit, offset)
	ret0, _ := ret[0].([]entities.Message)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPrivateMessages indicates an expected call of GetPrivateMessages.
func (mr *MockPrivateServiceMockRecorder) GetPrivateMessages(sender, recipient, limit, offset interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPrivateMessages", reflect.TypeOf((*MockPrivateService)(nil).GetPrivateMessages), sender, recipient, limit, offset)
}

// SendPrivateMessage mocks base method.
func (m_2 *MockPrivateService) SendPrivateMessage(m entities.Message) error {
	m_2.ctrl.T.Helper()
	ret := m_2.ctrl.Call(m_2, "SendPrivateMessage", m)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendPrivateMessage indicates an expected call of SendPrivateMessage.
func (mr *MockPrivateServiceMockRecorder) SendPrivateMessage(m interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendPrivateMessage", reflect.TypeOf((*MockPrivateService)(nil).SendPrivateMessage), m)
}

// ViewUsers mocks base method.
func (m *MockPrivateService) ViewUsers(user string) ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ViewUsers", user)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ViewUsers indicates an expected call of ViewUsers.
func (mr *MockPrivateServiceMockRecorder) ViewUsers(user interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ViewUsers", reflect.TypeOf((*MockPrivateService)(nil).ViewUsers), user)
}
