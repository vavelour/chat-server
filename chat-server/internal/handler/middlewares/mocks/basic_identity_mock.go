// Code generated by MockGen. DO NOT EDIT.
// Source: basic_auth.go

// Package mock_middlewares is a generated GoMock package.
package mock_middlewares

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockBasicAuthService is a mock of BasicAuthService interface.
type MockBasicAuthService struct {
	ctrl     *gomock.Controller
	recorder *MockBasicAuthServiceMockRecorder
}

// MockBasicAuthServiceMockRecorder is the mock recorder for MockBasicAuthService.
type MockBasicAuthServiceMockRecorder struct {
	mock *MockBasicAuthService
}

// NewMockBasicAuthService creates a new mock instance.
func NewMockBasicAuthService(ctrl *gomock.Controller) *MockBasicAuthService {
	mock := &MockBasicAuthService{ctrl: ctrl}
	mock.recorder = &MockBasicAuthServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBasicAuthService) EXPECT() *MockBasicAuthServiceMockRecorder {
	return m.recorder
}

// UserIdentity mocks base method.
func (m *MockBasicAuthService) UserIdentity(usr interface{}) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UserIdentity", usr)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UserIdentity indicates an expected call of UserIdentity.
func (mr *MockBasicAuthServiceMockRecorder) UserIdentity(usr interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UserIdentity", reflect.TypeOf((*MockBasicAuthService)(nil).UserIdentity), usr)
}
