// Code generated by MockGen. DO NOT EDIT.
// Source: jwt_bearer.go

// Package mock_middlewares is a generated GoMock package.
package mock_middlewares

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockJWTBearerService is a mock of JWTBearerService interface.
type MockJWTBearerService struct {
	ctrl     *gomock.Controller
	recorder *MockJWTBearerServiceMockRecorder
}

// MockJWTBearerServiceMockRecorder is the mock recorder for MockJWTBearerService.
type MockJWTBearerServiceMockRecorder struct {
	mock *MockJWTBearerService
}

// NewMockJWTBearerService creates a new mock instance.
func NewMockJWTBearerService(ctrl *gomock.Controller) *MockJWTBearerService {
	mock := &MockJWTBearerService{ctrl: ctrl}
	mock.recorder = &MockJWTBearerServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockJWTBearerService) EXPECT() *MockJWTBearerServiceMockRecorder {
	return m.recorder
}

// UserIdentity mocks base method.
func (m *MockJWTBearerService) UserIdentity(token interface{}) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UserIdentity", token)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UserIdentity indicates an expected call of UserIdentity.
func (mr *MockJWTBearerServiceMockRecorder) UserIdentity(token interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UserIdentity", reflect.TypeOf((*MockJWTBearerService)(nil).UserIdentity), token)
}
