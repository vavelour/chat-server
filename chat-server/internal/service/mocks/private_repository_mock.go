// Code generated by MockGen. DO NOT EDIT.
// Source: private_service.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	entities "github.com/vavelour/chat/internal/domain/entities"
)

// MockPrivateRepository is a mock of PrivateRepository interface.
type MockPrivateRepository struct {
	ctrl     *gomock.Controller
	recorder *MockPrivateRepositoryMockRecorder
}

// MockPrivateRepositoryMockRecorder is the mock recorder for MockPrivateRepository.
type MockPrivateRepositoryMockRecorder struct {
	mock *MockPrivateRepository
}

// NewMockPrivateRepository creates a new mock instance.
func NewMockPrivateRepository(ctrl *gomock.Controller) *MockPrivateRepository {
	mock := &MockPrivateRepository{ctrl: ctrl}
	mock.recorder = &MockPrivateRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPrivateRepository) EXPECT() *MockPrivateRepositoryMockRecorder {
	return m.recorder
}

// GetMessages mocks base method.
func (m *MockPrivateRepository) GetMessages(sender, recipient string, limit, offset int) ([]entities.Message, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMessages", sender, recipient, limit, offset)
	ret0, _ := ret[0].([]entities.Message)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMessages indicates an expected call of GetMessages.
func (mr *MockPrivateRepositoryMockRecorder) GetMessages(sender, recipient, limit, offset interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMessages", reflect.TypeOf((*MockPrivateRepository)(nil).GetMessages), sender, recipient, limit, offset)
}

// GetUsers mocks base method.
func (m *MockPrivateRepository) GetUsers(user string) ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUsers", user)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUsers indicates an expected call of GetUsers.
func (mr *MockPrivateRepositoryMockRecorder) GetUsers(user interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUsers", reflect.TypeOf((*MockPrivateRepository)(nil).GetUsers), user)
}

// InsertMessage mocks base method.
func (m_2 *MockPrivateRepository) InsertMessage(m entities.Message) error {
	m_2.ctrl.T.Helper()
	ret := m_2.ctrl.Call(m_2, "InsertMessage", m)
	ret0, _ := ret[0].(error)
	return ret0
}

// InsertMessage indicates an expected call of InsertMessage.
func (mr *MockPrivateRepositoryMockRecorder) InsertMessage(m interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertMessage", reflect.TypeOf((*MockPrivateRepository)(nil).InsertMessage), m)
}
