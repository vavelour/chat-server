// Code generated by MockGen. DO NOT EDIT.
// Source: public_service.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	entities "github.com/vavelour/chat/internal/domain/entities"
)

// MockPublicRepository is a mock of PublicRepository interface.
type MockPublicRepository struct {
	ctrl     *gomock.Controller
	recorder *MockPublicRepositoryMockRecorder
}

// MockPublicRepositoryMockRecorder is the mock recorder for MockPublicRepository.
type MockPublicRepositoryMockRecorder struct {
	mock *MockPublicRepository
}

// NewMockPublicRepository creates a new mock instance.
func NewMockPublicRepository(ctrl *gomock.Controller) *MockPublicRepository {
	mock := &MockPublicRepository{ctrl: ctrl}
	mock.recorder = &MockPublicRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPublicRepository) EXPECT() *MockPublicRepositoryMockRecorder {
	return m.recorder
}

// GetMessages mocks base method.
func (m *MockPublicRepository) GetMessages(limit, offset int) ([]entities.Message, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMessages", limit, offset)
	ret0, _ := ret[0].([]entities.Message)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMessages indicates an expected call of GetMessages.
func (mr *MockPublicRepositoryMockRecorder) GetMessages(limit, offset interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMessages", reflect.TypeOf((*MockPublicRepository)(nil).GetMessages), limit, offset)
}

// InsertMessage mocks base method.
func (m_2 *MockPublicRepository) InsertMessage(m entities.Message) error {
	m_2.ctrl.T.Helper()
	ret := m_2.ctrl.Call(m_2, "InsertMessage", m)
	ret0, _ := ret[0].(error)
	return ret0
}

// InsertMessage indicates an expected call of InsertMessage.
func (mr *MockPublicRepositoryMockRecorder) InsertMessage(m interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertMessage", reflect.TypeOf((*MockPublicRepository)(nil).InsertMessage), m)
}
